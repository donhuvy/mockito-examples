package com.tamnt.mockito.examples.service.entity;

import javax.persistence.*;
import java.math.BigDecimal;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

/**
 * CoinDetail generated by hbm2java
 */
@Entity
@Table(name = "coin_detail", schema = "examples")
public class CoinDetail implements java.io.Serializable {
    private static final long serialVersionUID = 1L;

    @Version
    long version = 0L;
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Basic(optional = false)
    @Column(name = "coin_detail_id", unique = true, nullable = false)
    private int coinDetailId;
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "account_number")
    private CoinAccount coinAccount;
    @Column(name = "earning_coin", precision = 131089, scale = 0)
    private BigDecimal earningCoin;
    @Column(name = "coin_balance", precision = 131089, scale = 0)
    private BigDecimal coinBalance;
    @Column(name = "earning_type", length = 48)
    private String earningType;
    @Column(name = "earning_reason", length = 512)
    private String earningReason;
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "earning_time", nullable = false, columnDefinition = "timestamp default now()")
    private Date earningTime = Calendar.getInstance().getTime();
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "expiration_period", length = 29)
    private Date expirationPeriod;
    @Column(name = "expiration_flag")
    private Boolean expirationFlag = Boolean.FALSE;
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created_date", nullable = false, columnDefinition = "timestamp default now()")
    private Date createdDate = Calendar.getInstance().getTime();
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "updated_date", nullable = false, columnDefinition = "timestamp default now()")
    private Date updatedDate = Calendar.getInstance().getTime();
    @Column(name = "admin_id")
    private Integer adminId = -1;
    @Column(name = "store_name")
    private String storeName;
    @Column(name = "admin_reason")
    private String adminReason;

    public CoinDetail() {
    }

    public CoinDetail(CoinAccount coinAccount, BigDecimal earningCoin, BigDecimal coinBalance, String earningType,
            String earningReason, Date earningTime, Date expirationPeriod) {
        this.coinAccount = coinAccount;
        this.earningCoin = earningCoin;
        this.coinBalance = coinBalance;
        this.earningType = earningType;
        this.earningReason = earningReason;
        this.earningTime = earningTime;
        this.expirationPeriod = expirationPeriod;
    }

    public final static Date getDefaultExpirationPeriod() {
        String str = "2999/12/31 23:59:59";
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
        try {
            return formatter.parse(str);
        } catch (ParseException e) {
            return null;
        }
    }

    @Column(name = "version")
    public long getVersion() {
        return version;
    }

    public void setVersion(long version) {
        this.version = version;
    }

    public int getCoinDetailId() {
        return coinDetailId;
    }

    public void setCoinDetailId(int coinDetailId) {
        this.coinDetailId = coinDetailId;
    }

    public CoinAccount getCoinAccount() {
        return coinAccount;
    }

    public void setCoinAccount(CoinAccount coinAccount) {
        this.coinAccount = coinAccount;
    }

    public BigDecimal getEarningCoin() {
        return earningCoin;
    }

    public void setEarningCoin(BigDecimal earningCoin) {
        this.earningCoin = earningCoin;
    }

    public BigDecimal getCoinBalance() {
        return coinBalance;
    }

    public void setCoinBalance(BigDecimal coinBalance) {
        this.coinBalance = coinBalance;
    }

    public String getEarningType() {
        return earningType;
    }

    public void setEarningType(String earningType) {
        this.earningType = earningType;
    }

    public String getEarningReason() {
        return earningReason;
    }

    public void setEarningReason(String earningReason) {
        this.earningReason = earningReason;
    }

    public Date getEarningTime() {
        return earningTime;
    }

    public void setEarningTime(Date earningTime) {
        this.earningTime = earningTime;
    }

    public Date getExpirationPeriod() {
        return expirationPeriod;
    }

    public void setExpirationPeriod(Date expirationPeriod) {
        this.expirationPeriod = expirationPeriod;
    }

    public Boolean getExpirationFlag() {
        return expirationFlag;
    }

    public void setExpirationFlag(Boolean expirationFlag) {
        this.expirationFlag = expirationFlag;
    }

    public Date getCreatedDate() {
        return createdDate;
    }

    public void setCreatedDate(Date createdDate) {
        this.createdDate = createdDate;
    }

    public Date getUpdatedDate() {
        return updatedDate;
    }

    public void setUpdatedDate(Date updatedDate) {
        this.updatedDate = updatedDate;
    }

    public Integer getAdminId() {
        return this.adminId;
    }

    public void setAdminId(Integer adminId) {
        this.adminId = adminId;
    }

    public String getStoreName() {
        return this.storeName;
    }

    public void setStoreName(String storeName) {
        this.storeName = storeName;
    }

    public String getAdminReason() {
        return adminReason;
    }

    public void setAdminReason(String adminReason) {
        this.adminReason = adminReason;
    }
}
